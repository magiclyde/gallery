# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Service\:
        resource: '../src/Service/*'
        public: true

    App\Service\FileManager:
        public: true
        arguments:
            $path: '%kernel.project_dir%/var/uploads'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            # - 'mysql:SESSDBname=%env(SESSDB_NAME)%; host=%env(SESSDB_HOST)%; port=%env(SESSDB_PORT)%'
            # - { SESSDB_table: 'sessions', SESSDB_username: '%env(SESSDB_USER)%', SESSDB_password: '%env(SESSDB_PASSWD)%' }

            # If you're using Doctrine & want to re-use that connection, then:
            # comment-out the above 2 lines and uncomment the line below
            - !service { class: PDO, factory: ['@database_connection', 'getWrappedConnection'] }
            # If you get transaction issues (e.g. after login) uncomment the line below
            - { lock_mode: 1 }


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
